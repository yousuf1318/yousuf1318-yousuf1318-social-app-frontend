{"version":3,"sources":["actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Login.js","components/auth/Register.js","components/layout/Alert.js","actions/profile.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-form/CreateProfile.js","components/profile-form/EditProfile.js","components/profile-form/AddExperience.js","components/profile-form/AddEducarion.js","components/layout/spinner.gif","components/layout/Spinner.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/layout/NotFound.js","components/routing/PrivateRoute.js","components/routing/Routes.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","GET_PROFILES","GET_REPOS","UPDATE_PROFILE","CLEAR_PROFILE","PROFILE_ERROR","ACCOUNT_DELETED","GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","login","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","register","console","log","password2","alerts","alert","length","map","getCurrentProfile","statusText","status","createProfile","FormData","history","edit","push","DashboardActions","deleteExperience","delete","experience","experiences","exp","company","title","format","from","_id","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","join","social","addExperience","put","current","description","checked","Date","now","disabled","cols","rows","addEducation","fieldofstudy","Spinner","src","spinner","style","width","margin","display","alt","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","ProfileTop","rel","Object","entries","filter","key","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","class","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","NotFound","Component","component","rest","render","props","Routes","exact","path","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","initialState","alertReducer","action","getItem","authReducer","setItem","removeItem","profileReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Landing","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d5a5a0ba.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';","import {v4 as uuid}  from \"uuid\"\r\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\"\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n    const id = uuid();\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg, alertType, id }\r\n    })\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout)\r\n\r\n}","import axios from 'axios'\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common['x-auth-token'] = token\r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth-token']\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import axios from \"axios\"\r\nimport { setAlert} from \"./alert\"\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_PROFILE\r\n} from \"./types\"\r\nimport setAuthToken from \"../utils/setAuthToken\"\r\n\r\n// Load user\r\nexport const loadUser = () => async dispatch =>{\r\n    if(localStorage.token) {\r\n        setAuthToken(localStorage.token)\r\n    }\r\n\r\n    try {\r\n        const res =await axios.get(\"/api/auth\")\r\n\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type:AUTH_ERROR\r\n        })\r\n    }\r\n}\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }\r\n\r\n    const body= JSON.stringify({ name, email, password});\r\n\r\n    try {\r\n        const res = await axios.post(\"/api/users\", body, config)\r\n        console.log(res)\r\n\r\n        dispatch({\r\n            type:REGISTER_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(loadUser())\r\n    } catch (err) {\r\n        const errors = err.response.data.errors\r\n\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, \"Danger...\")))\r\n        }\r\n        dispatch({\r\n            type:REGISTER_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n// Login user\r\nexport const login = ( email, password ) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }\r\n\r\n    const body= JSON.stringify({ email, password});\r\n\r\n    try {\r\n        const res = await axios.post(\"/api/auth\", body, config)\r\n\r\n        dispatch({\r\n            type:LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(loadUser())\r\n    } catch (err) {\r\n        const errors = err.response.data.errors\r\n\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, \"Danger...\")))\r\n        }\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// LOGOUT / Clear Profile\r\nexport const logout = () => dispatch =>{\r\n    dispatch({ type: CLEAR_PROFILE })\r\n    dispatch({ type: LOGOUT })\r\n    \r\n}","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { logout } from '../../actions/auth'\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n    const authLinks = (\r\n        <ul>    <li><Link to=\"/profiles\">\r\n            Developers </Link></li>\r\n            <li><Link to=\"/posts\">\r\n                Posts </Link></li>\r\n\r\n            <li><Link to=\"/dashboard\"><i className=\"fas fa-user\" >{'   '}\r\n                    Dashboard</i></Link></li>\r\n            <li><a onClick={logout} href=\"#!\">\r\n                <i className=\"fas fa-sign-out-alt\">{'   '}Logout</i></a></li>\r\n        </ul>\r\n    )\r\n\r\n    const guestLinks = (\r\n        <ul>\r\n            <li><Link to=\"/profiles\">Developers </Link></li>\r\n            <li><a href=\"#!\">About Yousuf </a></li>\r\n            <li><Link to=\"/register\">Register</Link></li>\r\n            <li><Link to=\"/login\">Login</Link></li>\r\n        </ul>\r\n    )\r\n\r\n    return (\r\n        <nav className=\"navbar bg-dark\">\r\n            <h1>\r\n                <Link to=\"/\"><i className=\"fas fa-code\"></i> 𝒴𝒪𝒰𝒮𝒰𝐹 </Link>\r\n            </h1>\r\n            { !loading && (<Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>)}\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar)","import React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/dashboard' />\r\n    }\r\n\r\n    return (\r\n        <section className=\"landing\">\r\n            <div className=\"dark-overlay\">\r\n                <div className=\"landing-inner\">\r\n                    <h1 className=\"x-large\">💥 𝐲𝕆𝕌𝓢ù𝕗 ℍÃ𝓼Ⓢα𝕟 💥</h1>\r\n                    <p className=\"lead\">\r\n                    </p>\r\n                    <div className=\"buttons\">\r\n                        <Link to=\"/register\" className=\"btn btn-primary\">Sign up</Link>\r\n                        <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nLanding.propTypes = {\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)","import React, { Fragment, useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { login } from '../../actions/auth'\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const { email, password } = formData;\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    login(email, password)\r\n  }\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign In</h1>\r\n      <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password} onChange={e => onChange(e)}\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Don't have any account? <Link to=\"/register\">Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login)","import React,{Fragment,useState} from 'react'\r\nimport {Link, Redirect} from \"react-router-dom\"\r\nimport {connect} from 'react-redux'\r\nimport {setAlert} from '../../actions/alert'\r\nimport PropTypes from 'prop-types'\r\nimport {register} from '../../actions/auth'\r\n\r\n\r\n\r\nconst Register = ({setAlert,register,isAuthenticated}) => {\r\n    const [formData,setFormData]=useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        password2:''\r\n    });\r\n    const {name,email,password,password2}=formData;\r\n    const onChange = e =>setFormData({...formData,[e.target.name]:e.target.value});\r\n    const onSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(password!==password2){\r\n          setAlert('Passwords do not match','danger')\r\n        }else{\r\n            register({name,email,password})\r\n        }\r\n    }\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />\r\n  }\r\n    return (\r\n      <Fragment>\r\n          <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n      <form className=\"form\" onSubmit={e=> onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} onChange={e=>onChange(e)} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e=>onChange(e)} />\r\n          <small className=\"form-text\"\r\n            >This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password} onChange={e=>onChange(e)} \r\n            // minLength=\"6\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n            value={password2} onChange={e=>onChange(e)} \r\n            // minLength=\"6\"\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n      </Fragment>\r\n    )\r\n};\r\nRegister.propTypes={\r\n  setAlert :PropTypes.func.isRequired,\r\n  register:PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps,{setAlert,register})(Register)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\n\r\nconst Alert = ({alerts}) => alerts !==null&& alerts.length>0&& alerts.map(alert=>(\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n        {alert.msg}\r\n    </div>\r\n));\r\n\r\nAlert.propTypes = {\r\nalerts:PropTypes.array.isRequired,\r\n}\r\nconst mapStateToProps = state =>({\r\n    alerts: state.alert\r\n})\r\nexport default connect(mapStateToProps)(Alert);","import axios from \"axios\"\r\nimport setAuthToken from '../utils/setAuthToken'\r\nimport {setAlert} from \"./alert\"\r\n\r\nimport {\r\n    GET_PROFILE,\r\n    GET_PROFILES,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    CLEAR_PROFILE,\r\n    ACCOUNT_DELETED,\r\n    GET_REPOS\r\n} from \"./types\"\r\n\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me')\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n// Get all Profile\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({ type: CLEAR_PROFILE })\r\n    try {\r\n        const res = await axios.get('/api/profile/')\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n\r\n    }\r\n}\r\n\r\n// Get Profile by ID\r\nexport const getProfileById = userId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/user/${userId}`)\r\n            // console.log(res.data[0].user)\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data[0]\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n\r\n    }\r\n} \r\n\r\n\r\n\r\n// Get Github repos\r\nexport const getGithubRepos = username => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/github/${username}`)\r\n        console.log(res.data)\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n\r\n    }\r\n}\r\n\r\n// Create or update profile\r\nexport const createProfile = (FormData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('/api/profile', FormData, config)\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'))\r\n\r\n        if (!edit) {\r\n            history.push('/dashboard')\r\n        }\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n// Add exprience\r\nexport const addExperience = (FormData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('api/profile/experience', FormData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Experience Added', 'success'))\r\n        history.push('/dashboard')\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Add Education\r\nexport const addEducation = (FormData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('api/profile/education', FormData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Education Added', 'success'))\r\n        history.push('/dashboard')\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Delete Experience\r\nexport const deleteExperience = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Experience Removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n// Delete Education\r\nexport const deleteEducation = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Education Removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n    \r\n\r\n// Delete Account and profile\r\nexport const deleteAccount = () => async dispatch => {\r\n    if (window.confirm('Are you sure to delete your Account?')) {\r\n\r\n\r\n        try {\r\n            await axios.delete('/api/profile')\r\n\r\n            dispatch({\r\n                type: CLEAR_PROFILE\r\n            })\r\n            dispatch({\r\n                type: ACCOUNT_DELETED\r\n            })\r\n            dispatch(setAlert('Your account has been permanently Deleted'))\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status }\r\n            })\r\n        }\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardActions = () => {\r\n  return (\r\n    <div className='dash-buttons'>\r\n      <Link to='/edit-profile' className='btn btn-light'>\r\n        <i className='fas fa-user-circle text-primary' /> Edit Profile\r\n      </Link>\r\n      <Link to='/add-experience' className='btn btn-light'>\r\n        <i className='fab fa-black-tie text-primary' /> Add Experience\r\n      </Link>\r\n      <Link to='/add-education' className='btn btn-light'>\r\n        <i className='fas fa-graduation-cap text-primary' /> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardActions;","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\nimport { deleteExperience } from '../../actions/profile'\r\n\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n    const experiences = experience.map(exp => (\r\n        \r\n        <tr key={exp._id}>\r\n            <td>{exp.company}</td>\r\n            <td>{exp.title}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{exp.from}</Moment> -{' '}\r\n                {exp.to === \"\" ? (\r\n                    ' Now'\r\n                ) : (\r\n                    <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\r\n                )}\r\n            </td>\r\n            <td>\r\n                <button onClick={() => deleteExperience(exp._id)} className='btn btn-danger'>Delete</button>\r\n            </td>\r\n        </tr>\r\n    \r\n    ))\r\n    return (\r\n        <Fragment>\r\n            <h2 className=\"my-2\">Experience Credentials</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Company</th>\r\n                        <th>Title</th>\r\n                        <th>Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{experiences}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nExperience.propTypes = {\r\n    experience: PropTypes.array.isRequired,\r\n    deleteExperience: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteExperience })(Experience)","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\nimport { deleteEducation } from '../../actions/profile'\r\n\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n    const educations = education.map(edu => (\r\n        \r\n        <tr key={edu._id}>\r\n            <td>{edu.school}</td>\r\n            <td>{edu.degree}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{edu.from}</Moment> -{' '}\r\n                {edu.to === \"\" ? (\r\n                    ' Now'\r\n                ) : (\r\n                    <Moment format='YYYY/MM/DD'>{edu.to}</Moment>\r\n                )}\r\n            </td>\r\n            <td>\r\n                <button onClick={() => deleteEducation(edu._id)} className='btn btn-danger'>Delete</button>\r\n            </td>\r\n        </tr>\r\n    \r\n    ))\r\n    return (\r\n        <Fragment>\r\n            <h2 className=\"my-2\">Education Credentials</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Institute</th>\r\n                        <th>Degree</th>\r\n                        <th>Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{educations}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEducation.propTypes = {\r\n    education: PropTypes.array.isRequired,\r\n    deleteEducation: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteEducation })(Education)","import React , { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile'\r\nimport { Link } from 'react-router-dom'\r\nimport DashboardActions from './DashboardActions'\r\nimport Experience from './Experience'\r\nimport Education from './Education'\r\n\r\nconst Dashboard = ({ getCurrentProfile, deleteAccount, auth: { user }, profile: {profile, loading } }) => {\r\n    useEffect(() => {\r\n        getCurrentProfile()\r\n    }, [getCurrentProfile])\r\n    \r\n    return (<Fragment>\r\n        <h1 className=\"large text-primary\">Welcome To Dashboard</h1>\r\n        <p className=\"lead\">\r\n            <i className=\"fas fa-user\"></i> Hello { user && user.name }. Nice To Meet You!!</p>\r\n        {profile !== null ? (\r\n            <Fragment><DashboardActions /> \r\n            <Experience experience={profile.experience} />\r\n            <Education education={profile.education} />\r\n            <div className=\"my-2\"> \r\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}> \r\n            <i className=\"fas fa-user-minus\"></i> Delete Account \r\n            </button> \r\n            </div> </Fragment>\r\n        ) : (\r\n            <Fragment><p>You don't have any profile.</p>\r\n            <Link to='/create-profile' className=\"btn btn-primary my-1\"> Create Profile</Link> </Fragment>\r\n        )}\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard)","import React, { Fragment, useState} from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { createProfile} from '../../actions/profile'\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: ''\r\n    })\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false)\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData\r\n\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        createProfile(formData, history)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n      <h1 className=\"large text-primary\">Edit Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Add some changes to your profile\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={onChange}>\r\n            <option>* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile))","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile'\r\n\r\nconst EditProfile = ({ profile: { profile, loading }, createProfile, getCurrentProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n  })\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile()\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n      githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram\r\n    })\r\n  }, [loading, getCurrentProfile])\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    createProfile(formData, history, true)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Edit Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Add some changes to your profile\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={onChange}>\r\n            <option>* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile))","\r\nimport React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { addExperience } from '../../actions/profile'\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        title: '',\r\n        location: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    })\r\n\r\n    // const [toDateDisabled, toggleDisabled] = useState(false)\r\n\r\n    const { company, title, location, from, to, current, description } = formData\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n    return (\r\n        <Fragment>\r\n          <h1 className=\"large text-primary\">Add An Experience</h1>\r\n          <p className=\"lead\">\r\n            <i className=\"fas fa-code-branch\" /> Add any developer/programming\r\n            positions that you have had in the past\r\n          </p>\r\n          <small>* = required field</small>\r\n          <form\r\n            className=\"form\"\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n              addExperience(formData, history); \r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"* Job Title\"\r\n                name=\"title\"\r\n                value={title}\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"* Company\"\r\n                name=\"company\"\r\n                value={company}\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Location\"\r\n                name=\"location\"\r\n                value={location}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <h4>From Date</h4>\r\n              <input type=\"date\" name=\"from\" value={from} onChange={onChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <p>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"current\"\r\n                  checked={current}\r\n                  value={Date.now}\r\n                  onChange={() => {\r\n                    setFormData({ ...formData, current: !current });\r\n                  }}\r\n                />{' '}\r\n                Current Job\r\n              </p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <h4>To Date</h4>\r\n              <input\r\n                type=\"date\"\r\n                name=\"to\"\r\n                value={to}\r\n                onChange={onChange}\r\n                disabled={current}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <textarea\r\n                name=\"description\"\r\n                cols=\"30\"\r\n                rows=\"5\"\r\n                placeholder=\"Job Description\"\r\n                value={description}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n            <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n              Go Back\r\n            </Link>\r\n          </form>\r\n        </Fragment>\r\n      );\r\n}\r\n\r\nAddExperience.propTypes = {\r\n    addExperience: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience))","\r\nimport React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { addEducation } from '../../actions/profile'\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    })\r\n\r\n    // const [toDateDisabled, toggleDisabled] = useState(false)\r\n\r\n    const { school, degree, fieldofstudy, from, to, current, description } = formData\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n    return (\r\n        <Fragment>\r\n          <h1 className=\"large text-primary\">Add Your Education</h1>\r\n          <p className=\"lead\">\r\n            <i className=\"fas fa-code-branch\" /> Add any School or Bootcamp you have attended.\r\n          </p>\r\n          <small>* = required field</small>\r\n          <form\r\n            className=\"form\"\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n              addEducation(formData, history); \r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"* School or Bootcamp\"\r\n                name=\"school\"\r\n                value={school}\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"* Degree or Certificate\"\r\n                name=\"degree\"\r\n                value={degree}\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Field of Study\"\r\n                name=\"fieldofstudy\"\r\n                value={fieldofstudy}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <h4>From Date</h4>\r\n              <input type=\"date\" name=\"from\" value={from} onChange={onChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <p>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"current\"\r\n                  checked={current}\r\n                  value={current}\r\n                  onChange={() => {\r\n                    setFormData({ ...formData, current: !current });\r\n                  }}\r\n                />{' '}\r\n                Current School\r\n              </p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <h4>To Date</h4>\r\n              <input\r\n                type=\"date\"\r\n                name=\"to\"\r\n                value={to}\r\n                onChange={onChange}\r\n                disabled={current}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <textarea\r\n                name=\"description\"\r\n                cols=\"30\"\r\n                rows=\"5\"\r\n                placeholder=\"Program Description\"\r\n                value={description}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n            <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n              Go Back\r\n            </Link>\r\n          </form>\r\n        </Fragment>\r\n      );\r\n}\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation))","export default __webpack_public_path__ + \"static/media/spinner.5a9c0964.gif\";","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: '50px', margin: 'auto', display: 'block' }}\r\n      alt=\"Loading...\"\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills\r\n  }\r\n}) => {\r\n  return (\r\n    <div className='profile bg-light'>\r\n      <img src={avatar} alt='' className='round-img' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>\r\n          {status} {company && <span> at {company}</span>}\r\n        </p>\r\n        <p className='my-1'>{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n          View Profile\r\n        </Link>\r\n      </div>\r\n      <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className='text-primary'>\r\n            <i className='fas fa-check' /> {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileItem;","import React, { Fragment, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport ProfileItem from './ProfileItem'\r\nimport { getProfiles} from '../../actions/profile'\r\n\r\nconst Profiles = ({ getProfiles, profile: {profiles, loading} }) => {\r\n    useEffect(() => {\r\n        getProfiles()\r\n    }, [getProfiles])\r\n    return <Fragment>\r\n        { loading ? <Spinner /> : <Fragment>\r\n            <h1 className=\"large text-primary\">Developers</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fab fa-connectdevelop\"></i> Browse and connect with Developers\r\n            </p>\r\n            <div className=\"profiles\">\r\n                {profiles.length > 0 ? (\r\n                    profiles.map(profile => (\r\n                        <ProfileItem key={profile._id} profile={profile} />\r\n                    ))\r\n                ) : <h4>No profiles found...</h4> }\r\n            </div>\r\n        </Fragment> }\r\n    </Fragment>\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileTop = ({ profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user\r\n} }) => {\r\n    return (\r\n        <div className=\"profile-top bg-primary p-2\">\r\n            <img className=\"round-img my-1\" src={user.avatar} alt=\"\" />\r\n            <h1 className=\"large\">{user.name}</h1>\r\n            <p className=\"lead\">\r\n                {status} {company ? <span> at {company}</span> : null}\r\n            </p>\r\n            <p>{location ? <span>{location}</span> : null}</p>\r\n            <div className=\"icons my-1\">\r\n                {website ? (\r\n                    <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fas fa-globe fa-2x\" />\r\n                    </a>\r\n                ) : null}\r\n                {social\r\n                    ? Object.entries(social)\r\n                        .filter(([_, value]) => value)\r\n                        .map(([key, value]) => (\r\n                            <a\r\n                                key={key}\r\n                                href={value}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                <i className={`fab fa-${key} fa-2x`}></i>\r\n                            </a>\r\n                        ))\r\n                    : null}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nProfileTop.propTypes = {\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileTop","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileAbout = ({\r\n    profile: {\r\n        bio,\r\n        skills,\r\n        user\r\n    }\r\n}) => (<div className='profile-about bg-light p-2'>\r\n    {bio && (\r\n        <Fragment>\r\n            <h2 className='text-primary'>{user.name.trim().split(' ')[0]}'s Bio</h2>\r\n            <p>{bio}</p>\r\n            <div className='line' />\r\n        </Fragment>\r\n    )}\r\n    <h2 className='text-primary'>Skill Set</h2>\r\n    <div className='skills'>\r\n        {skills.map((skill, index) => (\r\n            <div key={index} className='p-1'>\r\n                <i className='fas fa-check' /> {skill}\r\n            </div>\r\n        ))}\r\n    </div>\r\n</div>\r\n)\r\n\r\nProfileAbout.propTypes = {\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileAbout","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\n\r\nconst ProfileExperience = ({\r\n    experience: { company, title, location, current, to, from, description }\r\n}) => (\r\n    <div>\r\n        <h3 className=\"text-dark\">{company}</h3>\r\n        <p>\r\n            <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\r\n            {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n        </p>\r\n        <p>\r\n            <strong>Position: </strong> {title}\r\n        </p>\r\n        <p>\r\n            <strong>Description: </strong> {description}\r\n        </p>\r\n    </div>\r\n)\r\n\r\nProfileExperience.propTypes = {\r\n    experience: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ProfileExperience","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\n\r\nconst ProfileEducation = ({\r\n    education: { school, degree, fieldofstudy, current, to, from, description }\r\n}) => (\r\n    <div>\r\n        <h3 className=\"text-dark\">{school}</h3>\r\n        <p>\r\n            <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\r\n            {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n        </p>\r\n        <p>\r\n            <strong>Degree: </strong> {degree}\r\n        </p>\r\n        <p>\r\n            <strong>Field Of Study: </strong> {fieldofstudy}\r\n        </p>\r\n        <p>\r\n            <strong>Description: </strong> {description}\r\n        </p>\r\n    </div>\r\n)\r\n\r\nProfileEducation.propTypes = {\r\n    education: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ProfileEducation","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport { getGithubRepos } from '../../actions/profile'\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username)\r\n    }, [getGithubRepos])\r\n    return (\r\n        <div className=\"profile-github\">\r\n            <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n            {repos === null ? <Spinner /> : (\r\n                repos.map(repo => (\r\n                    <div key={repo._id} className=\"repo bg-white p-1 my-1\">\r\n                        <div>\r\n                            <h4>\r\n                                <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\r\n                                    {repo.name}\r\n                                </a>\r\n                            </h4>\r\n                            <p>{repo.description}</p>\r\n                        </div>\r\n                        <div>\r\n                            <ul>\r\n                                <li className=\"badge badge-primary\">\r\n                                    Stars: {repo.stargazers_count}\r\n                                </li>\r\n                                <li className=\"badge badge-dark\">\r\n                                    Watchers: {repo.watchers_count}\r\n                                </li>\r\n                                <li className=\"badge badge-light\">\r\n                                    Forks: {repo.forks_count}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    repos: state.profile.repos\r\n})\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub)","  \r\nimport React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport ProfileTop from './ProfileTop'\r\nimport ProfileAbout from './ProfileAbout'\r\nimport ProfileExperience from './ProfileExperience'\r\nimport ProfileEducation from './ProfileEducation'\r\nimport ProfileGithub from './ProfileGithub'\r\nimport { getCurrentProfile, getProfileById } from '../../actions/profile'\r\n\r\n\r\n\r\nconst Profile = ({\r\n    getProfileById,\r\n    profile: { profile, loading },\r\n    auth,\r\n    match\r\n}) => {\r\n    useEffect(() => {\r\n        getProfileById(match.params.id)\r\n    }, [getProfileById, match.params.id])\r\n    return <Fragment>\r\n        {profile === null || loading ? <Spinner /> : <Fragment>\r\n            <Link to='/profiles' className=\"btn btn-light\">\r\n                Back To Profiles\r\n            </Link>\r\n            {auth.isAuthenticated &&\r\n                auth.loading === false &&\r\n                auth.user._id === profile.user._id && (\r\n                    <Link to='/edit-profile' className='btn  btn-dark'>\r\n                        Edit Profile\r\n                    </Link>\r\n                )}\r\n            <div class=\"profile-grid my-1\">\r\n                <ProfileTop profile={profile} />\r\n                <ProfileAbout profile={profile} />\r\n                <div className=\"profile-exp bg-white p-2\">\r\n                    <h2 className=\"text-primary\">Experience</h2>\r\n                    {profile.experience.length > 0 ? (<Fragment>\r\n                        {profile.experience.map(experience => (\r\n                            <ProfileExperience key={experience._id} experience={experience} />\r\n                        ))}\r\n                    </Fragment>) : (<h4>No experience credentials</h4>)}\r\n                </div>\r\n\r\n\r\n                <div className=\"profile-edu bg-white p-2\">\r\n                    <h2 className=\"text-primary\">Education</h2>\r\n                    {profile.education.length > 0 ? (<Fragment>\r\n                        {profile.education.map(education => (\r\n                            <ProfileEducation key={education._id} education={education} />\r\n                        ))}\r\n                    </Fragment>) : (<h4>No education credentials</h4>)}\r\n                </div>\r\n\r\n                {profile.githubusername && (\r\n                    <ProfileGithub username={profile.githubusername} />\r\n                )}\r\n            </div>\r\n        </Fragment>}\r\n    </Fragment>\r\n}\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile)","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\nimport { addLike, removeLike, deletePost } from '../../actions/post'\r\n\r\nconst PostItem = ({ addLike, removeLike, deletePost, auth, post: { _id, text, name, avatar, user, likes, comments, date }, showActions\r\n}) => (<div className=\"post bg-white p-1 my-1\">\r\n    <div>\r\n        <Link to={`/profile/${user}`}>\r\n            <img className=\"round-img\" src={avatar} alt=\"\" />\r\n            <h4>{name}</h4>\r\n        </Link>\r\n    </div>\r\n    <div>\r\n        <p className=\"my-1\">{text}</p>\r\n        <p className=\"post-date\">Posted on <Moment format='YYYY/MM/DD'>{date}</Moment></p>\r\n\r\n        {showActions && (\r\n            <Fragment>\r\n                <button\r\n                    onClick={() => addLike(_id)}\r\n                    type=\"button\"\r\n                    className=\"btn btn-light\"\r\n                >\r\n                    <i className=\"fas fa-thumbs-up\" />{' '}\r\n                    <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n                </button>\r\n                <button\r\n                    onClick={() => removeLike(_id)}\r\n                    type=\"button\"\r\n                    className=\"btn btn-light\"\r\n                >\r\n                    <i className=\"fas fa-thumbs-down\" />\r\n                </button>\r\n                <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n                    Discussion{' '}\r\n                    {comments.length > 0 && (\r\n                        <span className=\"comment-count\">{comments.length}</span>\r\n                    )}\r\n                </Link>\r\n                {!auth.loading && user === auth.user._id && (\r\n                    <button\r\n                        onClick={() => deletePost(_id)}\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                    >\r\n                        <i className=\"fas fa-times\" />\r\n                    </button>\r\n                )}\r\n            </Fragment>\r\n        )}\r\n    </div>\r\n</div>\r\n)\r\n\r\nPostItem.defaultProps = {\r\n    showActions: true\r\n}\r\n\r\nPostItem.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    addLike: PropTypes.func.isRequired,\r\n    removeLike: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem)","  \r\nimport axios from 'axios'\r\nimport { setAlert } from './alert'\r\nimport {\r\n    GET_POSTS,\r\n    GET_POST,\r\n    GET_PROFILE,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from './types'\r\n\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/posts')\r\n\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const addLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${id}`)\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { id, likes: res.data }\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const removeLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${id}`)\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { id, likes: res.data }\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const deletePost = id => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: id\r\n        })\r\n\r\n        dispatch(setAlert('Post Removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const addPost = FormData => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post('/api/posts', FormData, config)\r\n\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Post Created', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getPost = id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/posts/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_POST,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const addComment = (postId, FormData) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`/api/posts/comment/${postId}`, FormData, config)\r\n\r\n        dispatch({\r\n            type: ADD_COMMENT,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Comment Added', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/comment/${postId}/${commentId}`)\r\n\r\n        dispatch({\r\n            type: REMOVE_COMMENT,\r\n            payload: commentId\r\n        })\r\n\r\n        dispatch(setAlert('Comment Removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addPost } from '../../actions/post'\r\n\r\nconst PostForm = ({ addPost }) => {\r\n    const [text, setText] = useState(' ')\r\n\r\n    return (\r\n        <div className='post-form'>\r\n            <div className='bg-primary p'>\r\n                <h3>Say Something...</h3>\r\n            </div>\r\n            <form\r\n                className='form my-1'\r\n                onSubmit={e => {\r\n                    e.preventDefault();\r\n                    addPost({ text });\r\n                    setText('');\r\n                }}\r\n            >\r\n                <textarea\r\n                    name='text'\r\n                    cols='30'\r\n                    rows='5'\r\n                    placeholder='Create a post'\r\n                    value={text}\r\n                    onChange={e => setText(e.target.value)}\r\n                    required\r\n                />\r\n                <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nPostForm.propTypes = {\r\n    addPost: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addPost })(PostForm)","import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport PostItem from './PostItem'\r\nimport PostForm from './PostForm'\r\nimport { getPosts } from '../../actions/post'\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n    useEffect(() => {\r\n        getPosts()\r\n    }, [getPosts])\r\n\r\n    return loading ? <Spinner /> : <Fragment>\r\n        <h1 className=\"large text-primary\">Posts</h1>\r\n        <p className=\"lead\">\r\n            <i className=\"fas fa-user\">  Welcome To the community </i>\r\n        </p>\r\n        <PostForm />\r\n        <div className=\"posts\">\r\n            {posts.map((post) => (\r\n                <PostItem key={post._id} post={post} />\r\n            ))}\r\n        </div>\r\n    </Fragment>\r\n}\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts)","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addComment } from '../../actions/post'\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n    const [text, setText] = useState('')\r\n\r\n    return (\r\n        <div className='post-form'>\r\n            <div className='bg-primary p'>\r\n                <h3>Leave a Comment</h3>\r\n            </div>\r\n            <form\r\n                className='form my-1'\r\n                onSubmit={e => {\r\n                    e.preventDefault();\r\n                    addComment(postId, { text });\r\n                    setText('');\r\n                }}\r\n            >\r\n                <textarea\r\n                    name='text'\r\n                    cols='30'\r\n                    rows='5'\r\n                    placeholder='Comment the post'\r\n                    value={text}\r\n                    onChange={e => setText(e.target.value)}\r\n                    required\r\n                />\r\n                <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    addComment: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, { addComment })(CommentForm)","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Moment from 'react-moment'\r\nimport { deleteComment } from '../../actions/post'\r\n\r\nconst CommentItem = ({\r\n    postId,\r\n    comment: { _id, text, name, avatar, user, date },\r\n    auth,\r\n    deleteComment\r\n}) => (\r\n    <div className=\"post bg-white p-1 my-1\">\r\n        <div>\r\n            <Link to={`/profile/${user}`}>\r\n                <img className=\"round-img\" src={avatar} alt=\"\" />\r\n                <h4>{name}</h4>\r\n            </Link>\r\n        </div>\r\n        <div>\r\n            <p className=\"my-1\">{text}</p>\r\n            <p className=\"post-date\">Posted on <Moment format='YYYY/MM/DD'>{date}</Moment></p>\r\n            {!auth.loading && user === auth.user._id && (\r\n                <button\r\n                    onClick={() => deleteComment(postId, _id)}\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger\"\r\n                >\r\n                    <i className=\"fas fa-times\" />\r\n                </button>\r\n            )}\r\n        </div>\r\n    </div>\r\n);\r\n\r\n\r\nCommentItem.propTypes = {\r\n    postId: PropTypes.number.isRequired,\r\n    comment: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    deleteComment: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem)","import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport PostItem from '../posts/PostItem'\r\nimport { getPost } from '../../actions/post'\r\nimport { Link } from 'react-router-dom'\r\nimport CommentForm from './CommentForm'\r\nimport CommentItem from './CommentItem'\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n    useEffect(() => {\r\n        getPost(match.params.id)\r\n    }, [getPost])\r\n\r\n    return (\r\n        loading || post === null ? (\r\n            <Spinner />\r\n        ) : (\r\n            <Fragment>\r\n                <Link to='/posts' className='btn'>\r\n                    Back to Posts\r\n                </Link>\r\n                <PostItem post={post} showActions={false} />\r\n                <CommentForm postId={post._id} />\r\n                <div className=\"comments\">\r\n                    {post.comments.map(comment => (\r\n                        <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n                    ))}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    )\r\n}\r\n\r\nPost.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post)","import React, { Fragment } from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"x-large text-primary\">\r\n                <i className=\"fas fa-exclamation-triangle\"> Page Not Found. </i>\r\n            </h1>\r\n            <p className=\"large\"> Sorry, this page does not exist. </p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NotFound","  \r\nimport React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nconst PrivateRoute = ({ component: Component, auth: {isAuthenticated, loading }, ...rest }) => (\r\n    <Route {...rest} render={props => !isAuthenticated && !loading ? (<Redirect to='/login/' />) : (<Component {...props} />)} />\r\n)\r\n \r\n\r\nPrivateRoute.propTypes = {\r\n    auth:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute)","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport '../../App.css';\r\nimport Login from '../auth/Login'\r\nimport Register from '../auth/Register'\r\nimport Alert from '../layout/Alert'\r\nimport Dashboard from '../dashboard/Dashboard'\r\nimport CreateProfile from '../profile-form/CreateProfile'\r\nimport EditProfile from '../profile-form/EditProfile'\r\nimport AddExperience from '../profile-form/AddExperience'\r\nimport AddEducation from '../profile-form/AddEducarion'\r\nimport Profiles from '../profiles/Profiles'\r\nimport Profile from '../profile/Profile'\r\nimport Posts from '../posts/Posts'\r\nimport Post from '../post/Post'\r\nimport NotFound from '../layout/NotFound'\r\nimport PrivateRoute from '../routing/PrivateRoute'\r\n\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <section className=\"container\">\r\n      <Alert />\r\n      <Switch>\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/profiles\" component={Profiles} />\r\n        <Route exact path=\"/profile/:id\" component={Profile} />\r\n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n        <PrivateRoute exact path=\"/create-profile\" component={CreateProfile} />\r\n        <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\r\n        <PrivateRoute exact path=\"/add-experience\" component={AddExperience} />\r\n        <PrivateRoute exact path=\"/add-education\" component={AddEducation} />\r\n        <PrivateRoute exact path=\"/posts\" component={Posts} />\r\n        <PrivateRoute exact path=\"/posts/:id\" component={Post} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </section>\r\n\r\n  )\r\n}\r\n\r\nexport default Routes","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nfunction alertReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default alertReducer;","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n};\r\n\r\nfunction authReducer(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            };\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token)\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            };\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n        case ACCOUNT_DELETED:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n                user: null\r\n            };\r\n            // case LOGOUT:\r\n            //     return {\r\n            //         ...state,\r\n            //         token: null,\r\n            //         isAuthenticated: false,\r\n            //         loading: false,\r\n            //         user: null\r\n            //     };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, GET_PROFILES, GET_REPOS } from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nfunction profileReducer(state = initialState, action) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            } \r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            }   \r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false\r\n            }\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import {\r\n    GET_POSTS,\r\n    GET_POST,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            }\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                post: payload,\r\n                loading: false\r\n            }\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [payload, ...state.posts],\r\n                loading: false\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload),\r\n                loading: false\r\n            }\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => post._id === payload.id ? { ...post, likes: payload.likes } : post),\r\n                loading: false\r\n            }\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: { ...state.post, comments: payload },\r\n                loading: false\r\n            }\r\n        case REMOVE_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: {\r\n                    ...state.post,\r\n                    comments: state.post.comments.filter(\r\n                        (comment) => comment._id !== payload\r\n                    )\r\n                },\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    profile,\r\n    post\r\n});","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools} from \"redux-devtools-extension\"\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst initialState = {};\r\n\r\nconst middleware= [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar'\nimport Landing from './components/layout/Landing'\nimport './App.css';\nimport Routes from './components/routing/Routes'\nimport { loadUser } from './actions/auth'\nimport setAuthToken from './utils/setAuthToken'\n// redux\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './App.css'\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token)\n}\n\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser())\n  }, [])\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route component={Routes} />\n          </Switch>\n\n        </Fragment>\n      </Router>\n    </Provider>\n  )\n};\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render( <\n    App / > ,\n    document.getElementById('root')\n);"],"sourceRoot":""}